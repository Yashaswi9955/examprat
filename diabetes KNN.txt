import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix, classification_report, accuracy_score
df=pd.read_csv("diabetes.csv") #Reading the Dataset
df.head()
df.dtypes
df["Glucose"].replace(0,df["Glucose"].mean(), inplace=True)
df["BloodPressure"].replace(0,df["BloodPressure"].mean(), inplace=True)
df["SkinThickness"].replace(0,df["SkinThickness"].mean(), inplace=True)
df["Insulin"].replace(0,df["Insulin"].mean(), inplace=True)
df["BMI"].replace(0,df["BMI"].mean(), inplace=True)
df.head()
X = df.iloc[:, :8]
Y = df.iloc[:, 8:]
X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.20,random_state=0)
def apply_model(model):#Model to print the scores of various models
	model.fit(X_train,Y_train)
	print("Training score = ",model.score(X_train,Y_train))
	print("Testing score = ",model.score(X_test,Y_test))
	print("Accuracy = ",model.score(X_test,Y_test))
	Y_pred = model.predict(X_test)
	print("Predicted values:\n",Y_pred)
	print("Confusion Matrix:\n",confusion_matrix(Y_test,Y_pred))
	print("Classification Report:\n",classification_report(Y_test,Y_pred))

knn = KNeighborsClassifier(n_neighbors=5) #KNN Model
apply_model(knn)

